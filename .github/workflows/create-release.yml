name: Create tag and release

on:
    push:
        branches:
            - master

jobs:
    check-commit:
        runs-on: ubuntu-latest
        outputs:
            result: ${{ steps.check.outputs.result }}
        steps:
            - uses: actions/checkout@v3
            - name: Check commit message
              id: check
              run: echo "result=$(echo '${{ github.event.head_commit.message }}' | grep -oP '^Update version to v(\d|\.)+$')" >> $GITHUB_OUTPUT
              shell: bash
    create-release:
        runs-on: ubuntu-latest
        needs: ["check-commit"]
        if: ${{ needs.check-commit.outputs.result != '' }}
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Get version
              id: get-version
              run: echo "version=$(echo '${{ github.event.head_commit.message }}' | grep -oP 'v(\d|\.)+')" >> $GITHUB_OUTPUT
              shell: bash
            - name: Generate body
              run: |
                  EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
                  echo "RELEASE_BODY<<$EOF" >> "$GITHUB_ENV"
                  echo "body=$git_logs" >> "$GITHUB_ENV"
                  echo "$EOF" >> "$GITHUB_ENV"
              shell: bash
            - name: Create Release
              id: create_release
              uses: actions/create-release@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ steps.get-version.outputs.version }}
                  release_name: ${{ steps.get-version.outputs.version }}
                  body: ${{ github.env.RELEASE_BODY }}
                  draft: false
                  prerelease: false
    trigger-deploy:
        runs-on: ubuntu-latest
        needs: ["create-release"]
        name: Trigger publish workflow
        steps:
            - uses: actions/github-script@v6
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  script: |
                      github.rest.actions.createWorkflowDispatch({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        workflow_id: 'npm-publish.yml',
                        ref: 'master',
                      })
