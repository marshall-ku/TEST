name: Create tag and release

on:
    push:
        branches:
            - master

jobs:
    check-commit:
        runs-on: ubuntu-latest
        outputs:
            result: ${{ steps.check.outputs.result }}
            version: ${{ steps.get-version.outputs.version }}
        steps:
            - uses: actions/checkout@v3
            - name: Check commit message
              id: check
              run: echo "result=$(echo '${{ github.event.head_commit.message }}' | grep -oP '^Update version to v\d+\.\d+\.\d+$')" >> $GITHUB_OUTPUT
              shell: bash
            - name: Get version
              id: get-version
              run: echo "version=$(echo '${{ github.event.head_commit.message }}' | grep -oP 'v\d+\.\d+\.\d+')" >> $GITHUB_OUTPUT
              shell: bash
    create-tag:
        runs-on: ubuntu-latest
        needs: ["check-commit"]
        if: ${{ needs.check-commit.outputs.result != '' }}
        outputs:
            tag-exists: ${{ steps.create-tag.outputs.tag_exists }}
        steps:
            - uses: actions/checkout@v3
            - uses: rickstaa/action-create-tag@v1
              id: create-tag
              with:
                  tag: ${{ needs.check-commit.outputs.version }}
                  tag_exists_error: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - run: echo '${{ steps.create-tag.outputs.tag_exists }}'
    create-release:
        runs-on: ubuntu-latest
        needs: ["check-commit", "create-tag"]
        if: ${{ (needs.check-commit.outputs.result != '') && (needs.create-tag.outputs.tag-exists == 'false') }}
        steps:
            - uses: actions/checkout@v3
            - name: Generate body
              id: generate-body
              run: echo "body=$(git log $(git describe --tags --abbrev=0)..HEAD --oneline)" >> "$GITHUB_OUTPUT"
            - uses: ncipollo/release-action@v1
              with:
                  name: ${{ needs.check-commit.outputs.version }}
                  body: ${{ steps.generate-body.outputs.body }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
